{"id":1350054556,"question_id":42,"lang":"c","lang_name":"C","time":"5 months, 3 weeks","timestamp":1723214849,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1350054556/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"9.4 MB","code":"int trap(int* height, int heightSize) {\n    if (heightSize <= 2) return 0;  // Not enough bars to trap water\n\n    int leftMax[heightSize], rightMax[heightSize];\n\n    // Fill the leftMax array\n    leftMax[0] = height[0];\n    for (int i = 1; i < heightSize; i++) {\n        if (height[i] > leftMax[i - 1]) {\n            leftMax[i] = height[i];\n        } else {\n            leftMax[i] = leftMax[i - 1];\n        }\n    }\n\n    // Fill the rightMax array\n    rightMax[heightSize - 1] = height[heightSize - 1];\n    for (int i = heightSize - 2; i >= 0; i--) {\n        if (height[i] > rightMax[i + 1]) {\n            rightMax[i] = height[i];\n        } else {\n            rightMax[i] = rightMax[i + 1];\n        }\n    }\n\n    // Calculate the total trapped water\n    int waterTrapped = 0;\n    for (int i = 0; i < heightSize; i++) {\n        int minHeight;\n        if (leftMax[i] < rightMax[i]) {\n            minHeight = leftMax[i];\n        } else {\n            minHeight = rightMax[i];\n        }\n\n        int waterAtI = minHeight - height[i];\n        if (waterAtI > 0) {\n            waterTrapped += waterAtI;\n        }\n    }\n\n    return waterTrapped;\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water","has_notes":false,"flag_type":1}