{"id":1349089547,"question_id":238,"lang":"c","lang_name":"C","time":"5 months, 3 weeks","timestamp":1723135397,"status":10,"status_display":"Accepted","runtime":"140 ms","url":"/submissions/detail/1349089547/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"30.3 MB","code":"/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* productExceptSelf(int* nums, int numsSize, int* returnSize) {\n    *returnSize=numsSize;\n    int *(output)=(int*)malloc(numsSize* sizeof(int));\n    output[0]=1;\n\n    for(int i=1;i<numsSize;i++ ) {\n        output[i]=output[i-1] * nums[i-1];\n    }\n    int right=1;\n    for(int i=numsSize-1;i>=0;i--) {\n        output[i]=output[i] *right;\n        right=right*nums[i];\n    }\n    return output;\n}","compare_result":"111111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}