{"id":1358968198,"question_id":151,"lang":"c","lang_name":"C","time":"5 months, 2 weeks","timestamp":1723903615,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1358968198/","is_pending":"Not Pending","title":"Reverse Words in a String","memory":"8.5 MB","code":"#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n\nvoid reverse(char* start, char* end) {\n    while (start < end) {\n        char temp = *start;\n        *start++ = *end;\n        *end-- = temp;\n    }\n}\n\nchar* reverseWords(char* s) {\n    int n = strlen(s);\n    char* result = s;  // Store the original pointer to return\n    char* wordStart = NULL;\n    int index = 0;\n    \n    // First, reverse each word in the string\n    for (int i = 0; i < n; i++) {\n        if (s[i] != ' ' && wordStart == NULL) {\n            wordStart = &s[i];\n        }\n        if (wordStart && (s[i + 1] == ' ' || s[i + 1] == '\\0')) {\n            reverse(wordStart, &s[i]);\n            wordStart = NULL;\n        }\n    }\n    \n    // Second, reverse the whole string\n    reverse(s, s + n - 1);\n    \n    // Third, clean up extra spaces\n    for (int i = 0; i < n; i++) {\n        if (s[i] != ' ' || (index > 0 && s[index - 1] != ' ')) {\n            s[index++] = s[i];\n        }\n    }\n    \n    // Remove trailing space, if any\n    if (index > 0 && s[index - 1] == ' ') {\n        index--;\n    }\n    \n    // Null terminate the result string\n    s[index] = '\\0';\n\n    return result;\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-words-in-a-string","has_notes":false,"flag_type":1}